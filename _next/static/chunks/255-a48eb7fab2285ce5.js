"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[255],{2055:(e,a,n)=>{n.d(a,{A:()=>t});let t=(0,n(8889).A)("users",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["path",{d:"M22 21v-2a4 4 0 0 0-3-3.87",key:"kshegd"}],["path",{d:"M16 3.13a4 4 0 0 1 0 7.75",key:"1da9ce"}]])},4676:(e,a,n)=>{n.d(a,{DT:()=>c,SS:()=>i});var t=n(4568);n(7620);var l=n(2387),s=n(287),r=n(1874);let o=s.Ik({satisfaction:s.ai().min(1).max(5),recommend:s.k5(["yes","maybe","no"]),improvements:s.Yj().optional(),referralSource:s.Yj().optional(),otherSource:s.Yj().optional(),features:s.YO(s.Yj()),country:s.Yj().optional(),state:s.Yj().optional()}),i='const surveySchema = z.object({\n  satisfaction: z.number().min(1).max(5),\n  recommend: z.enum(["yes", "maybe", "no"]),\n  improvements: z.string().optional(),\n  referralSource: z.string().optional(),\n  otherSource: z.string().optional(),\n  features: z.array(z.string()),\n  country: z.string().optional(),\n  state: z.string().optional(),\n});\n\nconst surveyForm = useFormedible({\n  schema: surveySchema,\n  fields: [\n    {\n      name: "satisfaction",\n      type: "rating",\n      label: "How satisfied are you with our service?",\n      ratingConfig: { max: 5, allowHalf: false, showValue: true },\n    },\n    {\n      name: "recommend",\n      type: "radio",\n      label: "Would you recommend us to others?",\n      options: [\n        { value: "yes", label: "Yes, definitely" },\n        { value: "maybe", label: "Maybe" },\n        { value: "no", label: "No" },\n      ],\n    },\n    {\n      name: "improvements",\n      type: "textarea",\n      label: "What could we improve?",\n      conditional: (values: any) => values.satisfaction < 4,\n    },\n    {\n      name: "referralSource",\n      type: "select",\n      label: "How did you hear about us?",\n      conditional: (values: any) => values.recommend === "yes",\n      options: [\n        { value: "friend", label: "Friend or colleague" },\n        { value: "social", label: "Social media" },\n        { value: "search", label: "Search engine" },\n        { value: "ad", label: "Advertisement" },\n        { value: "other", label: "Other" },\n      ],\n    },\n    {\n      name: "otherSource",\n      type: "text",\n      label: "Please specify",\n      conditional: (values: any) => values.referralSource === "other",\n    },\n    {\n      name: "features",\n      type: "multiSelect",\n      label: "Which features do you use most?",\n      options: [\n        { value: "forms", label: "Form Builder" },\n        { value: "validation", label: "Validation" },\n        { value: "analytics", label: "Analytics" },\n        { value: "integrations", label: "Integrations" },\n        { value: "api", label: "API Access" },\n      ],\n      multiSelectConfig: {\n        maxSelections: 3,\n      },\n    },\n    {\n      name: "country",\n      type: "select",\n      label: "Country",\n      options: [\n        { value: "us", label: "United States" },\n        { value: "ca", label: "Canada" },\n        { value: "uk", label: "United Kingdom" },\n        { value: "au", label: "Australia" },\n      ],\n    },\n    {\n      name: "state",\n      type: "select",\n      label: "State/Province",\n      conditional: (values: any) => !!values.country,\n      options: (values: any) => {\n        if (values.country === "us") {\n          return [\n            { value: "ca", label: "California" },\n            { value: "ny", label: "New York" },\n            { value: "tx", label: "Texas" },\n            { value: "fl", label: "Florida" },\n          ];\n        } else if (values.country === "ca") {\n          return [\n            { value: "on", label: "Ontario" },\n            { value: "qc", label: "Quebec" },\n            { value: "bc", label: "British Columbia" },\n            { value: "ab", label: "Alberta" },\n          ];\n        } else if (values.country === "uk") {\n          return [\n            { value: "england", label: "England" },\n            { value: "scotland", label: "Scotland" },\n            { value: "wales", label: "Wales" },\n            { value: "ni", label: "Northern Ireland" },\n          ];\n        } else if (values.country === "au") {\n          return [\n            { value: "nsw", label: "New South Wales" },\n            { value: "vic", label: "Victoria" },\n            { value: "qld", label: "Queensland" },\n            { value: "wa", label: "Western Australia" },\n          ];\n        }\n        return [];\n      },\n    },\n  ],\n  formOptions: {\n    defaultValues: {\n      satisfaction: 5,\n      recommend: "yes" as const,\n      improvements: "",\n      referralSource: "",\n      otherSource: "",\n      features: [],\n      country: "",\n      state: "",\n    },\n    onSubmit: async ({ value }) => {\n      console.log("Survey submitted:", value);\n      toast.success("Thank you for your feedback!", {\n        description: "Your response helps us improve.",\n      });\n    },\n  },\n});';function c(){let e=(0,l.X)({schema:o,fields:[{name:"satisfaction",type:"rating",label:"How satisfied are you with our service?",ratingConfig:{max:5,allowHalf:!1,showValue:!0}},{name:"recommend",type:"radio",label:"Would you recommend us to others?",options:[{value:"yes",label:"Yes, definitely"},{value:"maybe",label:"Maybe"},{value:"no",label:"No"}]},{name:"improvements",type:"textarea",label:"What could we improve?",conditional:e=>e.satisfaction<4},{name:"referralSource",type:"select",label:"How did you hear about us?",conditional:e=>"yes"===e.recommend,options:[{value:"friend",label:"Friend or colleague"},{value:"social",label:"Social media"},{value:"search",label:"Search engine"},{value:"ad",label:"Advertisement"},{value:"other",label:"Other"}]},{name:"otherSource",type:"text",label:"Please specify",conditional:e=>"other"===e.referralSource},{name:"features",type:"multiSelect",label:"Which features do you use most?",options:[{value:"forms",label:"Form Builder"},{value:"validation",label:"Validation"},{value:"analytics",label:"Analytics"},{value:"integrations",label:"Integrations"},{value:"api",label:"API Access"}],multiSelectConfig:{maxSelections:3}},{name:"country",type:"select",label:"Country",options:[{value:"us",label:"United States"},{value:"ca",label:"Canada"},{value:"uk",label:"United Kingdom"},{value:"au",label:"Australia"}]},{name:"state",type:"select",label:"State/Province",conditional:e=>!!e.country,options:e=>"us"===e.country?[{value:"ca",label:"California"},{value:"ny",label:"New York"},{value:"tx",label:"Texas"},{value:"fl",label:"Florida"}]:"ca"===e.country?[{value:"on",label:"Ontario"},{value:"qc",label:"Quebec"},{value:"bc",label:"British Columbia"},{value:"ab",label:"Alberta"}]:"uk"===e.country?[{value:"england",label:"England"},{value:"scotland",label:"Scotland"},{value:"wales",label:"Wales"},{value:"ni",label:"Northern Ireland"}]:"au"===e.country?[{value:"nsw",label:"New South Wales"},{value:"vic",label:"Victoria"},{value:"qld",label:"Queensland"},{value:"wa",label:"Western Australia"}]:[]}],formOptions:{defaultValues:{satisfaction:5,recommend:"yes",improvements:"",referralSource:"",otherSource:"",features:[],country:"",state:""},onSubmit:async e=>{let{value:a}=e;console.log("Survey submitted:",a),r.oR.success("Thank you for your feedback!",{description:"Your response helps us improve."})}}});return(0,t.jsx)(e.Form,{className:"space-y-4"})}},6838:(e,a,n)=>{n.d(a,{O:()=>i});var t=n(4568);n(7620);var l=n(3353),s=n(603),r=n(4148),o=n(3204);let i=e=>{let{title:a,description:n,preview:i,code:c,codeTitle:u,codeDescription:m,badges:d}=e;return(0,t.jsxs)(s.tU,{defaultValue:"preview",className:"w-full",children:[(0,t.jsxs)(s.j7,{className:"grid w-full grid-cols-2 mb-0",children:[(0,t.jsx)(s.Xi,{value:"preview",children:"Preview"}),(0,t.jsx)(s.Xi,{value:"code",children:"Code"})]}),(0,t.jsx)(s.av,{value:"preview",className:"mt-0",children:(0,t.jsxs)(l.Zp,{className:"rounded-t-none border-t-0 bg-muted/30",children:[(0,t.jsxs)(l.aR,{children:[(0,t.jsxs)(l.ZB,{className:"flex items-center gap-2",children:[a,null==d?void 0:d.map((e,a)=>(0,t.jsx)(r.E,{variant:e.variant||"secondary",children:e.text},a))]}),(0,t.jsx)(l.BT,{children:n})]}),(0,t.jsx)(l.Wu,{children:(0,t.jsx)("div",{className:"relative",children:i})})]})}),(0,t.jsx)(s.av,{value:"code",className:"mt-0",children:(0,t.jsxs)(l.Zp,{className:"rounded-t-none border-t-0",children:[(0,t.jsxs)(l.aR,{children:[(0,t.jsx)(l.ZB,{children:u||"".concat(a," Code")}),(0,t.jsx)(l.BT,{children:m||"Implementation code for ".concat(a.toLowerCase())})]}),(0,t.jsx)(l.Wu,{className:"p-0",children:(0,t.jsx)(o.CodeBlock,{code:c})})]})})]})}},7680:(e,a,n)=>{n.d(a,{l:()=>r});var t=n(4568),l=n(8309),s=n(1874);let r=e=>{let{...a}=e,{theme:n="system"}=(0,l.D)();return(0,t.jsx)(s.l$,{theme:n,className:"toaster group",style:{"--normal-bg":"var(--popover)","--normal-text":"var(--popover-foreground)","--normal-border":"var(--border)"},...a})}},8309:(e,a,n)=>{n.d(a,{D:()=>c,N:()=>u});var t=n(7620),l=(e,a,n,t,l,s,r,o)=>{let i=document.documentElement,c=["light","dark"];function u(a){var n;(Array.isArray(e)?e:[e]).forEach(e=>{let n="class"===e,t=n&&s?l.map(e=>s[e]||e):l;n?(i.classList.remove(...t),i.classList.add(s&&s[a]?s[a]:a)):i.setAttribute(e,a)}),n=a,o&&c.includes(n)&&(i.style.colorScheme=n)}if(t)u(t);else try{let e=localStorage.getItem(a)||n,t=r&&"system"===e?window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light":e;u(t)}catch(e){}},s=["light","dark"],r="(prefers-color-scheme: dark)",o=t.createContext(void 0),i={setTheme:e=>{},themes:[]},c=()=>{var e;return null!=(e=t.useContext(o))?e:i},u=e=>t.useContext(o)?t.createElement(t.Fragment,null,e.children):t.createElement(d,{...e}),m=["light","dark"],d=e=>{let{forcedTheme:a,disableTransitionOnChange:n=!1,enableSystem:l=!0,enableColorScheme:i=!0,storageKey:c="theme",themes:u=m,defaultTheme:d=l?"system":"light",attribute:y="data-theme",value:g,children:f,nonce:S,scriptProps:w}=e,[x,j]=t.useState(()=>b(c,d)),[N,k]=t.useState(()=>"system"===x?v():x),C=g?Object.values(g):u,z=t.useCallback(e=>{let a=e;if(!a)return;"system"===e&&l&&(a=v());let t=g?g[a]:a,r=n?h(S):null,o=document.documentElement,c=e=>{"class"===e?(o.classList.remove(...C),t&&o.classList.add(t)):e.startsWith("data-")&&(t?o.setAttribute(e,t):o.removeAttribute(e))};if(Array.isArray(y)?y.forEach(c):c(y),i){let e=s.includes(d)?d:null,n=s.includes(a)?a:e;o.style.colorScheme=n}null==r||r()},[S]),P=t.useCallback(e=>{let a="function"==typeof e?e(x):e;j(a);try{localStorage.setItem(c,a)}catch(e){}},[x]),A=t.useCallback(e=>{k(v(e)),"system"===x&&l&&!a&&z("system")},[x,a]);t.useEffect(()=>{let e=window.matchMedia(r);return e.addListener(A),A(e),()=>e.removeListener(A)},[A]),t.useEffect(()=>{let e=e=>{e.key===c&&(e.newValue?j(e.newValue):P(d))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)},[P]),t.useEffect(()=>{z(null!=a?a:x)},[a,x]);let E=t.useMemo(()=>({theme:x,setTheme:P,forcedTheme:a,resolvedTheme:"system"===x?N:x,themes:l?[...u,"system"]:u,systemTheme:l?N:void 0}),[x,P,a,N,l,u]);return t.createElement(o.Provider,{value:E},t.createElement(p,{forcedTheme:a,storageKey:c,attribute:y,enableSystem:l,enableColorScheme:i,defaultTheme:d,value:g,themes:u,nonce:S,scriptProps:w}),f)},p=t.memo(e=>{let{forcedTheme:a,storageKey:n,attribute:s,enableSystem:r,enableColorScheme:o,defaultTheme:i,value:c,themes:u,nonce:m,scriptProps:d}=e,p=JSON.stringify([s,n,i,a,u,c,r,o]).slice(1,-1);return t.createElement("script",{...d,suppressHydrationWarning:!0,nonce:"",dangerouslySetInnerHTML:{__html:"(".concat(l.toString(),")(").concat(p,")")}})}),b=(e,a)=>{let n;try{n=localStorage.getItem(e)||void 0}catch(e){}return n||a},h=e=>{let a=document.createElement("style");return e&&a.setAttribute("nonce",e),a.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")),document.head.appendChild(a),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(a)},1)}},v=e=>(e||(e=window.matchMedia(r)),e.matches?"dark":"light")},9096:(e,a,n)=>{n.d(a,{iy:()=>i,r9:()=>c});var t=n(4568);n(7620);var l=n(2387),s=n(287),r=n(1874);let o=s.Ik({name:s.Yj().min(2,"Name must be at least 2 characters"),email:s.Yj().email("Please enter a valid email"),subject:s.k5(["general","support","sales"]),message:s.Yj().min(10,"Message must be at least 10 characters"),urgent:s.zM().default(!1)}),i='const contactSchema = z.object({\n  name: z.string().min(2, "Name must be at least 2 characters"),\n  email: z.string().email("Please enter a valid email"),\n  subject: z.enum(["general", "support", "sales"]),\n  message: z.string().min(10, "Message must be at least 10 characters"),\n  urgent: z.boolean().default(false),\n});\n\nconst contactForm = useFormedible({\n  schema: contactSchema,\n  fields: [\n    {\n      name: "name",\n      type: "text",\n      label: "Full Name",\n      placeholder: "John Doe",\n    },\n    {\n      name: "email",\n      type: "email",\n      label: "Email",\n      placeholder: "john@example.com",\n    },\n    {\n      name: "subject",\n      type: "select",\n      label: "Subject",\n      options: [\n        { value: "general", label: "General Inquiry" },\n        { value: "support", label: "Technical Support" },\n        { value: "sales", label: "Sales Question" },\n      ],\n    },\n    {\n      name: "message",\n      type: "textarea",\n      label: "Message",\n      placeholder: "How can we help?",\n    },\n    { name: "urgent", type: "checkbox", label: "This is urgent" },\n  ],\n  submitLabel: "Send Message",\n  collapseLabel: "Hide",\n  expandLabel: "Show",\n  formOptions: {\n    defaultValues: {\n      name: "",\n      email: "",\n      subject: "general" as const,\n      message: "",\n      urgent: false,\n    },\n    onSubmit: async ({ value }) => {\n      console.log("Contact form submitted:", value);\n      toast.success("Message sent successfully!", {\n        description: "We\'ll get back to you soon.",\n      });\n    },\n  },\n});';function c(){let e=(0,l.X)({schema:o,fields:[{name:"name",type:"text",label:"Full Name",placeholder:"John Doe"},{name:"email",type:"email",label:"Email",placeholder:"john@example.com"},{name:"subject",type:"select",label:"Subject",options:[{value:"general",label:"General Inquiry"},{value:"support",label:"Technical Support"},{value:"sales",label:"Sales Question"}]},{name:"message",type:"textarea",label:"Message",placeholder:"How can we help?"},{name:"urgent",type:"checkbox",label:"This is urgent"}],submitLabel:"Send Message",collapseLabel:"Hide",expandLabel:"Show",formOptions:{defaultValues:{name:"",email:"",subject:"general",message:"",urgent:!1},onSubmit:async e=>{let{value:a}=e;console.log("Contact form submitted:",a),r.oR.success("Message sent successfully!",{description:"We'll get back to you soon."})}}});return(0,t.jsx)(e.Form,{className:"space-y-4"})}},9203:(e,a,n)=>{n.d(a,{Sg:()=>c,dP:()=>i});var t=n(4568);n(7620);var l=n(2387),s=n(287),r=n(1874);let o=s.Ik({firstName:s.Yj().min(1,"First name is required"),lastName:s.Yj().min(1,"Last name is required"),birthDate:s.p6(),email:s.Yj().email("Invalid email"),phone:s.Yj().min(10,"Phone number required"),address:s.Yj().min(5,"Address required"),newsletter:s.zM(),notifications:s.zM(),plan:s.k5(["basic","pro","enterprise"])}),i='const registrationSchema = z.object({\n  firstName: z.string().min(1, "First name is required"),\n  lastName: z.string().min(1, "Last name is required"),\n  birthDate: z.date(),\n  email: z.string().email("Invalid email"),\n  phone: z.string().min(10, "Phone number required"),\n  address: z.string().min(5, "Address required"),\n  newsletter: z.boolean(),\n  notifications: z.boolean(),\n  plan: z.enum(["basic", "pro", "enterprise"]),\n});\n\nconst registrationForm = useFormedible({\n  schema: registrationSchema,\n  fields: [\n    // Page 1\n    { name: "firstName", type: "text", label: "First Name", page: 1 },\n    { name: "lastName", type: "text", label: "Last Name", page: 1 },\n    { name: "birthDate", type: "date", label: "Birth Date", page: 1 },\n\n    // Page 2\n    { name: "email", type: "email", label: "Email", page: 2 },\n    { name: "phone", type: "phone", label: "Phone", page: 2 },\n    { name: "address", type: "textarea", label: "Address", page: 2 },\n\n    // Page 3\n    {\n      name: "newsletter",\n      type: "switch",\n      label: "Subscribe to newsletter",\n      page: 3,\n    },\n    {\n      name: "notifications",\n      type: "switch",\n      label: "Enable notifications",\n      page: 3,\n    },\n    {\n      name: "plan",\n      type: "radio",\n      label: "Choose Plan",\n      page: 3,\n      options: [\n        { value: "basic", label: "Basic - Free" },\n        { value: "pro", label: "Pro - $9/month" },\n        { value: "enterprise", label: "Enterprise - $29/month" },\n      ],\n    },\n  ],\n  pages: [\n    {\n      page: 1,\n      title: "Personal Information",\n      description: "Tell us about yourself",\n    },\n    {\n      page: 2,\n      title: "Contact Details",\n      description: "How can we reach you {{firstName}}?",\n    },\n    {\n      page: 3,\n      title: "Preferences",\n      description: "Customize your experience",\n    },\n  ],\n  progress: { showSteps: true, showPercentage: true },\n  formOptions: {\n    defaultValues: {\n      firstName: "",\n      lastName: "",\n      birthDate: new Date(),\n      email: "",\n      phone: "",\n      address: "",\n      newsletter: true,\n      notifications: true,\n      plan: "basic" as const,\n    },\n    onSubmit: async ({ value }) => {\n      console.log("Registration completed:", value);\n      toast.success("Registration completed!", {\n        description: "Welcome to our platform!",\n      });\n    },\n  },\n});';function c(){let e=(0,l.X)({schema:o,fields:[{name:"firstName",type:"text",label:"First Name",page:1},{name:"lastName",type:"text",label:"Last Name",page:1},{name:"birthDate",type:"date",label:"Birth Date",page:1},{name:"email",type:"email",label:"Email",page:2},{name:"phone",type:"phone",label:"Phone",page:2},{name:"address",type:"textarea",label:"Address",page:2},{name:"newsletter",type:"switch",label:"Subscribe to newsletter",page:3},{name:"notifications",type:"switch",label:"Enable notifications",page:3},{name:"plan",type:"radio",label:"Choose Plan",page:3,options:[{value:"basic",label:"Basic - Free"},{value:"pro",label:"Pro - $9/month"},{value:"enterprise",label:"Enterprise - $29/month"}]}],pages:[{page:1,title:"Personal Information",description:"Tell us about yourself"},{page:2,title:"Contact Details",description:"How can we reach you {{firstName}} ?"},{page:3,title:"Preferences",description:"Customize your experience"}],progress:{showSteps:!0,showPercentage:!0},formOptions:{defaultValues:{firstName:"",lastName:"",birthDate:new Date,email:"",phone:"",address:"",newsletter:!0,notifications:!0,plan:"basic"},onSubmit:async e=>{let{value:a}=e;console.log("Registration completed:",a),r.oR.success("Registration completed!",{description:"Welcome to our platform!"})}}});return(0,t.jsx)(e.Form,{className:"space-y-4"})}}}]);