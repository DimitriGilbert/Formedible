(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[442],{579:(e,a,n)=>{"use strict";n.d(a,{SS:()=>i,ZY:()=>m,_D:()=>c,iy:()=>t,nF:()=>l,s9:()=>r,u:()=>s,vK:()=>o});let t='const contactForm = useFormedible({\n  schema: z.object({\n    name: z.string().min(2, "Name must be at least 2 characters"),\n    email: z.string().email("Please enter a valid email"),\n    message: z.string().min(10, "Message must be at least 10 characters"),\n    newsletter: z.boolean().optional(),\n  }),\n  fields: [\n    { name: "name", type: "text", label: "Full Name", placeholder: "Enter your full name" },\n    { name: "email", type: "email", label: "Email Address", placeholder: "your@email.com" },\n    { name: "message", type: "textarea", label: "Message", placeholder: "Tell us what you think..." },\n    { name: "newsletter", type: "checkbox", label: "Subscribe to newsletter" },\n  ],\n  submitLabel: "Send Message",\n  formOptions: {\n    defaultValues: { \n      name: "",\n      email: "",\n      message: "",\n      newsletter: false \n    },\n    onSubmit: async ({ value }) => {\n      console.log("Contact form submitted:", value);\n      alert("Thank you for your message!");\n    },\n  },\n});\n\nreturn <contactForm.Form className="space-y-6" />;',l='const AnimatedFieldWrapper: React.FC<{ children: React.ReactNode; field: any }> = ({ children, field }) => (\n  <motion.div\n    initial={{ opacity: 0, y: 20 }}\n    animate={{ opacity: 1, y: 0 }}\n    exit={{ opacity: 0, y: -20 }}\n    transition={{ duration: 0.3, delay: 0.1 }}\n    className="space-y-2"\n  >\n    {children}\n  </motion.div>\n);\n\nconst profileForm = useFormedible({\n  schema: z.object({\n    firstName: z.string().min(1, "First name is required"),\n    lastName: z.string().min(1, "Last name is required"),\n    email: z.string().email("Please enter a valid email"),\n    age: z.number().min(13, "Must be at least 13 years old").max(120, "Invalid age"),\n    country: z.string().min(1, "Please select a country"),\n    bio: z.string().optional(),\n    notifications: z.boolean().default(true),\n    newsletter: z.boolean().default(false),\n    birthday: z.date().optional(),\n  }),\n  fields: [\n    { name: "firstName", type: "text", label: "First Name", placeholder: "John" },\n    { name: "lastName", type: "text", label: "Last Name", placeholder: "Doe" },\n    { name: "email", type: "email", label: "Email", placeholder: "john@example.com" },\n    { name: "age", type: "number", label: "Age", placeholder: "25", min: 13, max: 120 },\n    { \n      name: "country", \n      type: "select", \n      label: "Country", \n      options: ["United States", "Canada", "United Kingdom", "Germany", "France", "Other"] \n    },\n    { name: "bio", type: "textarea", label: "Bio", placeholder: "Tell us about yourself..." },\n    { name: "notifications", type: "switch", label: "Enable notifications" },\n    { name: "newsletter", type: "checkbox", label: "Subscribe to newsletter" },\n    { name: "birthday", type: "date", label: "Birthday" },\n  ],\n  submitLabel: "Update Profile",\n  globalWrapper: AnimatedFieldWrapper,\n  formOptions: {\n    defaultValues: {\n      firstName: "",\n      lastName: "",\n      email: "",\n      age: 25,\n      country: "",\n      bio: "",\n      notifications: true,\n      newsletter: false,\n    },\n    onSubmit: async ({ value }) => {\n      console.log("Profile updated:", value);\n      alert("Profile updated successfully!");\n    },\n  },\n});\n\nreturn <profileForm.Form className="space-y-6" />;',i='const surveyForm = useFormedible({\n  schema: z.object({\n    satisfaction: z.number().min(1).max(10),\n    recommend: z.boolean(),\n    feedback: z.string().min(5, "Please provide at least 5 characters of feedback"),\n    category: z.string().min(1, "Please select a category"),\n  }),\n  fields: [\n    { name: "satisfaction", type: "slider", label: "Satisfaction (1-10)", min: 1, max: 10 },\n    { name: "recommend", type: "switch", label: "Would you recommend us?" },\n    { name: "feedback", type: "textarea", label: "Feedback", placeholder: "Your feedback helps us improve..." },\n    { \n      name: "category", \n      type: "select", \n      label: "Category", \n      options: ["Product", "Support", "Documentation", "Other"] \n    },\n  ],\n  submitLabel: "Submit Survey",\n  formOptions: {\n    defaultValues: { \n      satisfaction: 5,\n      recommend: true,\n      feedback: "",\n      category: ""\n    },\n    onSubmit: async ({ value }) => {\n      console.log("Survey submitted:", value);\n      alert("Thank you for your feedback!");\n    },\n  },\n});\n\nreturn <surveyForm.Form className="space-y-6" />;',s='const contactSchema = z.object({\n  name: z.string().min(2, "Name must be at least 2 characters"),\n  email: z.string().email("Please enter a valid email"),\n  subject: z.enum(["general", "support", "sales"]),\n  message: z.string().min(10, "Message must be at least 10 characters"),\n  urgent: z.boolean().default(false),\n});\n\nconst contactForm = useFormedible({\n  schema: contactSchema,\n  fields: [\n    { name: "name", type: "text", label: "Full Name", placeholder: "John Doe" },\n    { name: "email", type: "email", label: "Email", placeholder: "john@example.com" },\n    { \n      name: "subject", \n      type: "select", \n      label: "Subject",\n      options: [\n        { value: "general", label: "General Inquiry" },\n        { value: "support", label: "Technical Support" },\n        { value: "sales", label: "Sales Question" }\n      ]\n    },\n    { name: "message", type: "textarea", label: "Message", placeholder: "How can we help?" },\n    { name: "urgent", type: "checkbox", label: "This is urgent" },\n  ],\n  formOptions: {\n    defaultValues: {\n      name: "",\n      email: "",\n      subject: "general" as const,\n      message: "",\n      urgent: false,\n    },\n    onSubmit: async ({ value }) => {\n      console.log("Contact form submitted:", value);\n      toast.success("Message sent successfully!");\n    },\n  },\n});',o='const registrationSchema = z.object({\n  firstName: z.string().min(1, "First name is required"),\n  lastName: z.string().min(1, "Last name is required"),\n  birthDate: z.date(),\n  email: z.string().email("Invalid email"),\n  phone: z.string().min(10, "Phone number required"),\n  address: z.string().min(5, "Address required"),\n  newsletter: z.boolean(),\n  notifications: z.boolean(),\n  plan: z.enum(["basic", "pro", "enterprise"]),\n});\n\nconst registrationForm = useFormedible({\n  schema: registrationSchema,\n  fields: [\n    // Page 1 - Personal Info\n    { name: "firstName", type: "text", label: "First Name", page: 1 },\n    { name: "lastName", type: "text", label: "Last Name", page: 1 },\n    { name: "birthDate", type: "date", label: "Birth Date", page: 1 },\n    \n    // Page 2 - Contact Details\n    { name: "email", type: "email", label: "Email", page: 2 },\n    { name: "phone", type: "phone", label: "Phone", page: 2 },\n    { name: "address", type: "textarea", label: "Address", page: 2 },\n    \n    // Page 3 - Preferences\n    { name: "newsletter", type: "switch", label: "Subscribe to newsletter", page: 3 },\n    { name: "notifications", type: "switch", label: "Enable notifications", page: 3 },\n    { \n      name: "plan", \n      type: "radio", \n      label: "Choose Plan", \n      page: 3,\n      options: [\n        { value: "basic", label: "Basic - Free" },\n        { value: "pro", label: "Pro - $9/month" },\n        { value: "enterprise", label: "Enterprise - $29/month" }\n      ]\n    },\n  ],\n  pages: [\n    { page: 1, title: "Personal Information", description: "Tell us about yourself" },\n    { page: 2, title: "Contact Details", description: "How can we reach you?" },\n    { page: 3, title: "Preferences", description: "Customize your experience" },\n  ],\n  progress: { showSteps: true, showPercentage: true },\n});',r='const surveySchema = z.object({\n  satisfaction: z.number().min(1).max(5),\n  recommend: z.enum(["yes", "maybe", "no"]),\n  improvements: z.string().optional(),\n  referralSource: z.string().optional(),\n  otherSource: z.string().optional(),\n  features: z.array(z.string()),\n});\n\nconst surveyForm = useFormedible({\n  schema: surveySchema,\n  fields: [\n    { \n      name: "satisfaction", \n      type: "rating", \n      label: "How satisfied are you with our service?",\n      ratingConfig: { max: 5, allowHalf: false, showValue: true }\n    },\n    { \n      name: "recommend", \n      type: "radio", \n      label: "Would you recommend us to others?",\n      options: [\n        { value: "yes", label: "Yes, definitely" },\n        { value: "maybe", label: "Maybe" },\n        { value: "no", label: "No" }\n      ]\n    },\n    {\n      name: "improvements",\n      type: "textarea",\n      label: "What could we improve?",\n      conditional: (values: any) => values.satisfaction < 4,\n    },\n    {\n      name: "features",\n      type: "multiSelect",\n      label: "Which features do you use most?",\n      options: [\n        { value: "forms", label: "Form Builder" },\n        { value: "validation", label: "Validation" },\n        { value: "analytics", label: "Analytics" },\n        { value: "integrations", label: "Integrations" },\n        { value: "api", label: "API Access" }\n      ],\n      multiSelectConfig: { maxSelections: 3 }\n    }\n  ],\n});',c='const checkoutSchema = z.object({\n  firstName: z.string().min(1),\n  lastName: z.string().min(1),\n  email: z.string().email(),\n  address: z.string().min(5),\n  city: z.string().min(1),\n  zipCode: z.string().min(5),\n  paymentMethod: z.enum(["card", "paypal", "apple_pay"]),\n  cardNumber: z.string().optional(),\n  expiryDate: z.string().optional(),\n  shippingMethod: z.enum(["standard", "express", "overnight"]),\n  giftMessage: z.string().optional(),\n});\n\nconst checkoutForm = useFormedible({\n  schema: checkoutSchema,\n  fields: [\n    // Page 1 - Shipping Address\n    { name: "firstName", type: "text", label: "First Name", page: 1 },\n    { name: "lastName", type: "text", label: "Last Name", page: 1 },\n    { name: "email", type: "email", label: "Email", page: 1 },\n    { name: "address", type: "text", label: "Address", page: 1 },\n    { name: "city", type: "text", label: "City", page: 1 },\n    { name: "zipCode", type: "text", label: "ZIP Code", page: 1 },\n    \n    // Page 2 - Payment Method\n    { \n      name: "paymentMethod", \n      type: "radio", \n      label: "Payment Method", \n      page: 2,\n      options: [\n        { value: "card", label: "Credit/Debit Card" },\n        { value: "paypal", label: "PayPal" },\n        { value: "apple_pay", label: "Apple Pay" }\n      ]\n    },\n    {\n      name: "cardNumber",\n      type: "text",\n      label: "Card Number",\n      page: 2,\n      conditional: (values: any) => values.paymentMethod === "card",\n      placeholder: "1234 5678 9012 3456"\n    },\n    \n    // Page 3 - Shipping & Review\n    { \n      name: "shippingMethod", \n      type: "radio", \n      label: "Shipping Method", \n      page: 3,\n      options: [\n        { value: "standard", label: "Standard (5-7 days) - Free" },\n        { value: "express", label: "Express (2-3 days) - $9.99" },\n        { value: "overnight", label: "Overnight - $24.99" }\n      ]\n    },\n    { name: "giftMessage", type: "textarea", label: "Gift Message (Optional)", page: 3 },\n  ],\n  pages: [\n    { page: 1, title: "Shipping Address", description: "Where should we send your order?" },\n    { page: 2, title: "Payment", description: "How would you like to pay?" },\n    { page: 3, title: "Review & Submit", description: "Review your order" },\n  ],\n  progress: { showSteps: true },\n});',m='const jobApplicationSchema = z.object({\n  firstName: z.string().min(1),\n  lastName: z.string().min(1),\n  email: z.string().email(),\n  phone: z.string().min(1),\n  skills: z.array(z.string()).min(1),\n  startDate: z.date(),\n  salaryExpectation: z.number().min(0),\n  whyInterested: z.string().min(10),\n  additionalInfo: z.string().optional(),\n});\n\nconst jobApplicationForm = useFormedible({\n  schema: jobApplicationSchema,\n  fields: [\n    // Page 1 - Personal Information\n    { name: "firstName", type: "text", label: "First Name", page: 1 },\n    { name: "lastName", type: "text", label: "Last Name", page: 1 },\n    { name: "email", type: "email", label: "Email", page: 1 },\n    { name: "phone", type: "phone", label: "Phone Number", page: 1 },\n    \n    // Page 2 - Skills & Experience\n    {\n      name: "skills",\n      type: "multiSelect",\n      label: "Technical Skills",\n      page: 2,\n      options: [\n        { value: "javascript", label: "JavaScript" },\n        { value: "typescript", label: "TypeScript" },\n        { value: "react", label: "React" },\n        { value: "node", label: "Node.js" },\n        { value: "python", label: "Python" },\n        { value: "java", label: "Java" },\n        { value: "sql", label: "SQL" },\n        { value: "aws", label: "AWS" },\n      ],\n      multiSelectConfig: {\n        searchable: true,\n        creatable: true,\n        maxSelections: 10\n      }\n    },\n    { name: "startDate", type: "date", label: "Available Start Date", page: 2 },\n    { \n      name: "salaryExpectation", \n      type: "number", \n      label: "Salary Expectation (USD)", \n      page: 2,\n      min: 0,\n      step: 1000\n    },\n    \n    // Page 3 - Additional Questions\n    { \n      name: "whyInterested", \n      type: "textarea", \n      label: "Why are you interested in this position?", \n      page: 3 \n    },\n    { \n      name: "additionalInfo", \n      type: "textarea", \n      label: "Additional Information", \n      page: 3 \n    },\n  ],\n  pages: [\n    { page: 1, title: "Personal Information" },\n    { page: 2, title: "Skills & Availability" },\n    { page: 3, title: "Additional Questions" },\n  ],\n  progress: { showSteps: true, showPercentage: true },\n});'},2956:(e,a,n)=>{Promise.resolve().then(n.bind(n,9198))},6838:(e,a,n)=>{"use strict";n.d(a,{O:()=>r});var t=n(4568);n(7620);var l=n(3353),i=n(603),s=n(4148),o=n(3204);let r=e=>{let{title:a,description:n,preview:r,code:c,codeTitle:m,codeDescription:p,badges:d}=e;return(0,t.jsxs)(i.tU,{defaultValue:"preview",className:"w-full",children:[(0,t.jsxs)(i.j7,{className:"grid w-full grid-cols-2 mb-0",children:[(0,t.jsx)(i.Xi,{value:"preview",children:"Preview"}),(0,t.jsx)(i.Xi,{value:"code",children:"Code"})]}),(0,t.jsx)(i.av,{value:"preview",className:"mt-0",children:(0,t.jsxs)(l.Zp,{className:"rounded-t-none border-t-0 bg-muted/30",children:[(0,t.jsxs)(l.aR,{children:[(0,t.jsxs)(l.ZB,{className:"flex items-center gap-2",children:[a,null==d?void 0:d.map((e,a)=>(0,t.jsx)(s.E,{variant:e.variant||"secondary",children:e.text},a))]}),(0,t.jsx)(l.BT,{children:n})]}),(0,t.jsx)(l.Wu,{children:(0,t.jsx)("div",{className:"relative",children:r})})]})}),(0,t.jsx)(i.av,{value:"code",className:"mt-0",children:(0,t.jsxs)(l.Zp,{className:"rounded-t-none border-t-0",children:[(0,t.jsxs)(l.aR,{children:[(0,t.jsx)(l.ZB,{children:m||"".concat(a," Code")}),(0,t.jsx)(l.BT,{children:p||"Implementation code for ".concat(a.toLowerCase())})]}),(0,t.jsx)(l.Wu,{className:"p-0",children:(0,t.jsx)(o.CodeBlock,{code:c})})]})})]})}},7680:(e,a,n)=>{"use strict";n.d(a,{l:()=>s});var t=n(4568),l=n(8309),i=n(1874);let s=e=>{let{...a}=e,{theme:n="system"}=(0,l.D)();return(0,t.jsx)(i.l$,{theme:n,className:"toaster group",style:{"--normal-bg":"var(--popover)","--normal-text":"var(--popover-foreground)","--normal-border":"var(--border)"},...a})}},9198:(e,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>N});var t=n(4568);n(7620);var l=n(4396),i=n(8072),s=n(1874),o=n(7680),r=n(603),c=n(7227),m=n(8276),p=n(7261),d=n.n(p),u=n(2545),b=n(6838),y=n(579);let h=i.Ik({name:i.Yj().min(2,"Name must be at least 2 characters"),email:i.Yj().email("Please enter a valid email"),subject:i.k5(["general","support","sales"]),message:i.Yj().min(10,"Message must be at least 10 characters"),urgent:i.zM().default(!1)}),g=i.Ik({firstName:i.Yj().min(1,"First name is required"),lastName:i.Yj().min(1,"Last name is required"),birthDate:i.p6(),email:i.Yj().email("Invalid email"),phone:i.Yj().min(10,"Phone number required"),address:i.Yj().min(5,"Address required"),newsletter:i.zM(),notifications:i.zM(),plan:i.k5(["basic","pro","enterprise"])}),f=i.Ik({satisfaction:i.ai().min(1).max(5),recommend:i.k5(["yes","maybe","no"]),improvements:i.Yj().optional(),referralSource:i.Yj().optional(),otherSource:i.Yj().optional(),features:i.YO(i.Yj())}),v=i.Ik({firstName:i.Yj().min(1),lastName:i.Yj().min(1),email:i.Yj().email(),address:i.Yj().min(5),city:i.Yj().min(1),zipCode:i.Yj().min(5),paymentMethod:i.k5(["card","paypal","apple_pay"]),cardNumber:i.Yj().optional(),expiryDate:i.Yj().optional(),shippingMethod:i.k5(["standard","express","overnight"]),giftMessage:i.Yj().optional()}),x=i.Ik({firstName:i.Yj().min(1),lastName:i.Yj().min(1),email:i.Yj().email(),phone:i.Yj().min(1),skills:i.YO(i.Yj()).min(1),startDate:i.p6(),salaryExpectation:i.ai().min(0),whyInterested:i.Yj().min(10),additionalInfo:i.Yj().optional()}),j=i.Ik({firstName:i.Yj().min(1,"First name is required"),lastName:i.Yj().min(1,"Last name is required"),email:i.Yj().email("Invalid email"),phone:i.Yj().min(1,"Phone is required"),theme:i.k5(["light","dark","auto"]),language:i.k5(["en","es","fr","de"]),notifications:i.zM(),newsletter:i.zM(),privacy:i.k5(["public","private","friends"]),marketing:i.zM(),analytics:i.zM(),location:i.Yj().optional()});function N(){let e=(0,l.XE)({schema:h,fields:[{name:"name",type:"text",label:"Full Name",placeholder:"John Doe"},{name:"email",type:"email",label:"Email",placeholder:"john@example.com"},{name:"subject",type:"select",label:"Subject",options:[{value:"general",label:"General Inquiry"},{value:"support",label:"Technical Support"},{value:"sales",label:"Sales Question"}]},{name:"message",type:"textarea",label:"Message",placeholder:"How can we help?"},{name:"urgent",type:"checkbox",label:"This is urgent"}],formOptions:{defaultValues:{name:"",email:"",subject:"general",message:"",urgent:!1},onSubmit:async e=>{let{value:a}=e;console.log("Contact form submitted:",a),s.oR.success("Message sent successfully!",{description:"We'll get back to you soon."})}}}),a=(0,l.XE)({schema:g,fields:[{name:"firstName",type:"text",label:"First Name",page:1},{name:"lastName",type:"text",label:"Last Name",page:1},{name:"birthDate",type:"date",label:"Birth Date",page:1},{name:"email",type:"email",label:"Email",page:2},{name:"phone",type:"phone",label:"Phone",page:2},{name:"address",type:"textarea",label:"Address",page:2},{name:"newsletter",type:"switch",label:"Subscribe to newsletter",page:3},{name:"notifications",type:"switch",label:"Enable notifications",page:3},{name:"plan",type:"radio",label:"Choose Plan",page:3,options:[{value:"basic",label:"Basic - Free"},{value:"pro",label:"Pro - $9/month"},{value:"enterprise",label:"Enterprise - $29/month"}]}],pages:[{page:1,title:"Personal Information",description:"Tell us about yourself"},{page:2,title:"Contact Details",description:"How can we reach you?"},{page:3,title:"Preferences",description:"Customize your experience"}],progress:{showSteps:!0,showPercentage:!0},formOptions:{defaultValues:{firstName:"",lastName:"",birthDate:new Date,email:"",phone:"",address:"",newsletter:!0,notifications:!0,plan:"basic"},onSubmit:async e=>{let{value:a}=e;console.log("Registration completed:",a),s.oR.success("Registration completed!",{description:"Welcome to our platform!"})}}}),n=(0,l.XE)({schema:f,fields:[{name:"satisfaction",type:"rating",label:"How satisfied are you with our service?",ratingConfig:{max:5,allowHalf:!1,showValue:!0}},{name:"recommend",type:"radio",label:"Would you recommend us to others?",options:[{value:"yes",label:"Yes, definitely"},{value:"maybe",label:"Maybe"},{value:"no",label:"No"}]},{name:"improvements",type:"textarea",label:"What could we improve?",conditional:e=>e.satisfaction<4},{name:"referralSource",type:"select",label:"How did you hear about us?",conditional:e=>"yes"===e.recommend,options:[{value:"friend",label:"Friend or colleague"},{value:"social",label:"Social media"},{value:"search",label:"Search engine"},{value:"ad",label:"Advertisement"},{value:"other",label:"Other"}]},{name:"otherSource",type:"text",label:"Please specify",conditional:e=>"other"===e.referralSource},{name:"features",type:"multiSelect",label:"Which features do you use most?",options:[{value:"forms",label:"Form Builder"},{value:"validation",label:"Validation"},{value:"analytics",label:"Analytics"},{value:"integrations",label:"Integrations"},{value:"api",label:"API Access"}],multiSelectConfig:{maxSelections:3}}],formOptions:{defaultValues:{satisfaction:5,recommend:"yes",improvements:"",referralSource:"",otherSource:"",features:[]},onSubmit:async e=>{let{value:a}=e;console.log("Survey submitted:",a),s.oR.success("Thank you for your feedback!",{description:"Your response helps us improve."})}}}),i=(0,l.XE)({schema:v,fields:[{name:"firstName",type:"text",label:"First Name",page:1},{name:"lastName",type:"text",label:"Last Name",page:1},{name:"email",type:"email",label:"Email",page:1},{name:"address",type:"text",label:"Address",page:1},{name:"city",type:"text",label:"City",page:1},{name:"zipCode",type:"text",label:"ZIP Code",page:1},{name:"paymentMethod",type:"radio",label:"Payment Method",page:2,options:[{value:"card",label:"Credit/Debit Card"},{value:"paypal",label:"PayPal"},{value:"apple_pay",label:"Apple Pay"}]},{name:"cardNumber",type:"text",label:"Card Number",page:2,conditional:e=>"card"===e.paymentMethod,placeholder:"1234 5678 9012 3456"},{name:"expiryDate",type:"text",label:"Expiry Date",page:2,conditional:e=>"card"===e.paymentMethod,placeholder:"MM/YY"},{name:"shippingMethod",type:"radio",label:"Shipping Method",page:3,options:[{value:"standard",label:"Standard (5-7 days) - Free"},{value:"express",label:"Express (2-3 days) - $9.99"},{value:"overnight",label:"Overnight - $24.99"}]},{name:"giftMessage",type:"textarea",label:"Gift Message (Optional)",page:3}],pages:[{page:1,title:"Shipping Address",description:"Where should we send your order?"},{page:2,title:"Payment",description:"How would you like to pay?"},{page:3,title:"Review & Submit",description:"Review your order"}],progress:{showSteps:!0},formOptions:{defaultValues:{firstName:"",lastName:"",email:"",address:"",city:"",zipCode:"",paymentMethod:"card",cardNumber:"",expiryDate:"",shippingMethod:"standard",giftMessage:""},onSubmit:async e=>{let{value:a}=e;console.log("Order submitted:",a),s.oR.success("Order placed successfully!",{description:"You'll receive a confirmation email shortly."})}}}),p=(0,l.XE)({schema:x,fields:[{name:"firstName",type:"text",label:"First Name",page:1},{name:"lastName",type:"text",label:"Last Name",page:1},{name:"email",type:"email",label:"Email",page:1},{name:"phone",type:"phone",label:"Phone Number",page:1},{name:"skills",type:"multiSelect",label:"Technical Skills",page:2,options:[{value:"javascript",label:"JavaScript"},{value:"typescript",label:"TypeScript"},{value:"react",label:"React"},{value:"node",label:"Node.js"},{value:"python",label:"Python"},{value:"java",label:"Java"},{value:"sql",label:"SQL"},{value:"aws",label:"AWS"}],multiSelectConfig:{searchable:!0,creatable:!0,maxSelections:10}},{name:"startDate",type:"date",label:"Available Start Date",page:2},{name:"salaryExpectation",type:"number",label:"Salary Expectation (USD)",page:2,min:0,step:1e3},{name:"whyInterested",type:"textarea",label:"Why are you interested in this position?",page:3},{name:"additionalInfo",type:"textarea",label:"Additional Information",page:3}],pages:[{page:1,title:"Personal Information"},{page:2,title:"Skills & Availability"},{page:3,title:"Additional Questions"}],progress:{showSteps:!0,showPercentage:!0},formOptions:{defaultValues:{firstName:"",lastName:"",email:"",phone:"",skills:[],startDate:new Date,salaryExpectation:0,whyInterested:"",additionalInfo:""},onSubmit:async e=>{let{value:a}=e;console.log("Application submitted:",a),s.oR.success("Application submitted!",{description:"We'll review your application and get back to you soon."})}}}),N=(0,l.XE)({schema:j,fields:[{name:"firstName",type:"text",label:"First Name",tab:"personal"},{name:"lastName",type:"text",label:"Last Name",tab:"personal"},{name:"email",type:"email",label:"Email",tab:"personal"},{name:"phone",type:"phone",label:"Phone",tab:"personal"},{name:"theme",type:"select",label:"Theme",tab:"preferences",options:[{value:"light",label:"Light"},{value:"dark",label:"Dark"},{value:"auto",label:"Auto"}]},{name:"language",type:"select",label:"Language",tab:"preferences",options:[{value:"en",label:"English"},{value:"es",label:"Spanish"},{value:"fr",label:"French"},{value:"de",label:"German"}]},{name:"notifications",type:"switch",label:"Enable Notifications",tab:"preferences"},{name:"newsletter",type:"switch",label:"Subscribe to Newsletter",tab:"preferences"},{name:"privacy",type:"radio",label:"Privacy Setting",tab:"settings",options:[{value:"public",label:"Public"},{value:"private",label:"Private"},{value:"friends",label:"Friends Only"}]},{name:"marketing",type:"checkbox",label:"Allow Marketing Emails",tab:"settings"},{name:"analytics",type:"checkbox",label:"Allow Analytics",tab:"settings"},{name:"location",type:"text",label:"Location (Optional)",tab:"settings"}],tabs:[{id:"personal",label:"Personal Info",description:"Basic information about you"},{id:"preferences",label:"Preferences",description:"Your app preferences"},{id:"settings",label:"Settings",description:"Privacy and account settings"}],formOptions:{defaultValues:{firstName:"",lastName:"",email:"",phone:"",theme:"auto",language:"en",notifications:!0,newsletter:!1,privacy:"private",marketing:!1,analytics:!0,location:""},onSubmit:async e=>{let{value:a}=e;console.log("Tabbed form submitted:",a),s.oR.success("Profile updated successfully!",{description:"Your settings have been saved."})}}});return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.l,{position:"top-right",richColors:!0}),(0,t.jsx)("div",{className:"min-h-screen bg-background",children:(0,t.jsx)("div",{className:"container mx-auto py-8 px-4 max-w-6xl",children:(0,t.jsxs)("div",{className:"space-y-8",children:[(0,t.jsxs)("div",{className:"mb-12",children:[(0,t.jsx)("div",{className:"flex items-center gap-4 mb-6",children:(0,t.jsx)(c.$,{variant:"ghost",size:"sm",asChild:!0,children:(0,t.jsxs)(d(),{href:"/docs",children:[(0,t.jsx)(m.A,{className:"w-4 h-4 mr-2"}),"Back to Docs"]})})}),(0,t.jsxs)(u.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},children:[(0,t.jsx)("h1",{className:"text-4xl font-bold mb-4",children:"Interactive Examples"}),(0,t.jsx)("p",{className:"text-lg text-muted-foreground",children:"Real-world examples demonstrating Formedible's capabilities with working forms. Try them out to see the features in action!"})]})]}),(0,t.jsxs)(r.tU,{defaultValue:"contact",className:"w-full",children:[(0,t.jsxs)(r.j7,{className:"grid w-full grid-cols-6",children:[(0,t.jsx)(r.Xi,{value:"contact",children:"Contact Form"}),(0,t.jsx)(r.Xi,{value:"registration",children:"Registration"}),(0,t.jsx)(r.Xi,{value:"survey",children:"Survey"}),(0,t.jsx)(r.Xi,{value:"checkout",children:"Checkout"}),(0,t.jsx)(r.Xi,{value:"job",children:"Job Application"}),(0,t.jsx)(r.Xi,{value:"tabbed",children:"Tabbed Form"})]}),(0,t.jsx)(r.av,{value:"contact",children:(0,t.jsx)(u.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},children:(0,t.jsx)(b.O,{title:"Contact Form",description:"A simple contact form with validation, demonstrating basic field types and schema validation.",badges:[{text:"Basic",variant:"secondary"}],preview:(0,t.jsx)(e.Form,{className:"space-y-4"}),code:y.u,codeTitle:"Contact Form Implementation",codeDescription:"Simple form setup with subject selection, message validation, and urgency flag"})})}),(0,t.jsx)(r.av,{value:"registration",children:(0,t.jsx)(u.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},children:(0,t.jsx)(b.O,{title:"Multi-Step Registration",description:"A multi-page registration form with progress tracking and various field types.",badges:[{text:"Multi-Page",variant:"secondary"}],preview:(0,t.jsx)(a.Form,{className:"space-y-4"}),code:y.vK,codeTitle:"Multi-Step Registration Form",codeDescription:"Complete registration flow with personal info, contact details, and preferences across 3 pages"})})}),(0,t.jsx)(r.av,{value:"survey",children:(0,t.jsx)(u.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},children:(0,t.jsx)(b.O,{title:"Dynamic Survey Form",description:"A survey form with conditional questions that appear based on previous answers.",badges:[{text:"Conditional",variant:"secondary"}],preview:(0,t.jsx)(n.Form,{className:"space-y-4"}),code:y.s9,codeTitle:"Dynamic Survey with Conditional Logic",codeDescription:"Advanced survey featuring rating fields, conditional improvements section, and multi-select features"})})}),(0,t.jsx)(r.av,{value:"checkout",children:(0,t.jsx)(u.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},children:(0,t.jsx)(b.O,{title:"E-commerce Checkout",description:"A complete checkout form with shipping, payment, and order options across multiple pages.",badges:[{text:"Complex",variant:"secondary"}],preview:(0,t.jsx)(i.Form,{className:"space-y-4"}),code:y._D,codeTitle:"E-commerce Checkout Flow",codeDescription:"Complete checkout process with shipping address, payment methods, and conditional card fields"})})}),(0,t.jsx)(r.av,{value:"job",children:(0,t.jsx)(u.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},children:(0,t.jsx)(b.O,{title:"Job Application Form",description:"A comprehensive job application form with skills selection, availability, and open-ended questions.",badges:[{text:"Advanced",variant:"secondary"}],preview:(0,t.jsx)(p.Form,{className:"space-y-4"}),code:y.ZY,codeTitle:"Advanced Job Application Form",codeDescription:"Multi-page application with searchable skills selection, salary expectations, and detailed questions"})})}),(0,t.jsx)(r.av,{value:"tabbed",children:(0,t.jsx)(u.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},children:(0,t.jsx)(b.O,{title:"Tabbed Form Layout",description:"A form organized into tabs for better user experience with related fields grouped together.",badges:[{text:"Tabs",variant:"secondary"}],preview:(0,t.jsx)(N.Form,{className:"space-y-4"}),code:'const tabbedForm = useFormedible({\n  schema: tabbedFormSchema,\n  fields: [\n    // Personal tab\n    { name: "firstName", type: "text", label: "First Name", tab: "personal" },\n    { name: "lastName", type: "text", label: "Last Name", tab: "personal" },\n    { name: "email", type: "email", label: "Email", tab: "personal" },\n    { name: "phone", type: "phone", label: "Phone", tab: "personal" },\n    \n    // Preferences tab\n    { name: "theme", type: "select", label: "Theme", tab: "preferences", options: [...] },\n    { name: "language", type: "select", label: "Language", tab: "preferences", options: [...] },\n    { name: "notifications", type: "switch", label: "Enable Notifications", tab: "preferences" },\n    { name: "newsletter", type: "switch", label: "Subscribe to Newsletter", tab: "preferences" },\n    \n    // Settings tab\n    { name: "privacy", type: "radio", label: "Privacy Setting", tab: "settings", options: [...] },\n    { name: "marketing", type: "checkbox", label: "Allow Marketing Emails", tab: "settings" },\n    { name: "analytics", type: "checkbox", label: "Allow Analytics", tab: "settings" },\n    { name: "location", type: "text", label: "Location (Optional)", tab: "settings" },\n  ],\n  tabs: [\n    { id: "personal", label: "Personal Info", description: "Basic information about you" },\n    { id: "preferences", label: "Preferences", description: "Your app preferences" },\n    { id: "settings", label: "Settings", description: "Privacy and account settings" },\n  ],\n  formOptions: {\n    onSubmit: async ({ value }) => {\n      console.log("Tabbed form submitted:", value);\n      toast.success("Profile updated successfully!");\n    },\n  },\n});',codeTitle:"Tabbed Form Implementation",codeDescription:"Form with tabs for organizing related fields into logical groups"})})})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{className:"text-2xl font-semibold mb-4",children:"Best Practices"}),(0,t.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[(0,t.jsxs)("div",{className:"border-l-4 border-primary pl-4",children:[(0,t.jsx)("h3",{className:"font-semibold",children:"Form Structure"}),(0,t.jsx)("p",{className:"text-sm text-muted-foreground",children:"Break complex forms into logical sections or pages. Use clear labels and helpful descriptions."})]}),(0,t.jsxs)("div",{className:"border-l-4 border-accent pl-4",children:[(0,t.jsx)("h3",{className:"font-semibold",children:"Validation Strategy"}),(0,t.jsx)("p",{className:"text-sm text-muted-foreground",children:"Combine client-side validation with server-side validation. Provide immediate feedback for better UX."})]}),(0,t.jsxs)("div",{className:"border-l-4 border-secondary pl-4",children:[(0,t.jsx)("h3",{className:"font-semibold",children:"Progressive Enhancement"}),(0,t.jsx)("p",{className:"text-sm text-muted-foreground",children:"Use conditional fields to show relevant questions only. Implement auto-save for long forms."})]}),(0,t.jsxs)("div",{className:"border-l-4 border-muted pl-4",children:[(0,t.jsx)("h3",{className:"font-semibold",children:"Accessibility"}),(0,t.jsx)("p",{className:"text-sm text-muted-foreground",children:"Ensure proper labeling, keyboard navigation, and screen reader support for all form elements."})]})]})]})]})})})]})}}},e=>{var a=a=>e(e.s=a);e.O(0,[824,531,261,701,443,87,104,367,587,315,358],()=>a(2956)),_N_E=e.O()}]);