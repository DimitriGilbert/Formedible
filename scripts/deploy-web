#!/bin/bash

# Deploy Web Application Script
# Usage: scripts/deploy-web [--dry-run]

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
WEB_DIST_DIR="apps/web/out"

# Parse command line arguments
DRY_RUN=false

while [[ $# -gt 0 ]]; do
  case $1 in
    --dry-run)
      DRY_RUN=true
      shift
      ;;
    -h|--help)
      echo "Usage: $0 [options]"
      echo ""
      echo "Options:"
      echo "  --dry-run       Prepare deployment but don't actually deploy"
      echo "  -h, --help      Show this help message"
      echo ""
      echo "Examples:"
      echo "  $0              # Deploy web application to gh-pages"
      echo "  $0 --dry-run    # Prepare deployment without publishing"
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      echo "Use --help for usage information"
      exit 1
      ;;
  esac
done

# Functions
log_info() {
  echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
  echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
  echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
  echo -e "${RED}[ERROR]${NC} $1"
}

deploy_web() {
  if [[ ! -d "$WEB_DIST_DIR" ]]; then
    log_error "Web build output not found. Run 'scripts/build-web' first."
    exit 1
  fi
  
  log_info "Preparing web deployment..."
  
  # Navigate to web app directory
  pushd apps/web > /dev/null
  
  # Run export script to prepare deployment files
  log_info "Running export preparation..."
  npm run export
  
  if [[ "$DRY_RUN" == true ]]; then
    log_warning "Dry run mode - deployment prepared but not published"
    popd > /dev/null
    return
  fi
  
  # Check if gh-pages is available
  if ! command -v npx &> /dev/null; then
    log_error "npx is not available. Please install Node.js with npm."
    exit 1
  fi
  
  # Deploy to gh-pages
  log_info "Deploying to gh-pages..."
  if npm run deploy; then
    log_success "Web application deployed to gh-pages successfully!"
    log_info "Your site should be available at: https://$(git config --get remote.origin.url | sed 's/.*github.com[:/]\([^/]*\)\/\([^.]*\).*/\1.github.io\/\2/')/"
  else
    log_error "Web deployment failed"
    popd > /dev/null
    exit 1
  fi
  
  popd > /dev/null
}

# Main execution
main() {
  echo "ðŸš€ Formedible Web Deployer"
  echo "=========================="
  
  # Ensure we're in the right directory
  if [[ ! -f "package.json" ]]; then
    log_error "package.json not found. Please run this script from the project root."
    exit 1
  fi
  
  # Check if we're in a git repository
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    log_error "Not in a git repository"
    exit 1
  fi
  
  deploy_web
  
  log_success "Web deployment complete! ðŸŽ‰"
}

# Run main function
main "$@"